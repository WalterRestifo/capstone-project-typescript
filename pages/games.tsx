import Head from "next/head";
import Header from "../components/Header";
import Navigation from "../components/Navigation";
import styled from "styled-components";
import Link from "next/link";
import MiniCard from "../components/MiniCard";
import { MiniPlayer, Team } from "../interfaces/interfaces";
import { useEffect, useState } from "react";
import getAllTeams from "../utils/getAllTeams";
import postTeam from "../utils/postTeam";
import TeamComponent from "../components/TeamComponent";

export default function Games(): JSX.Element {
  const [matches, setMatches] = useState([]);

  // useEffect(() => {
  //   const fetchedTeams = getAllTeams();
  //   ???
  // }, []);

  useEffect(() => {
    const team1WithLastGamePoints = localStorage.getItem(
      "team1WithLastGamePoints"
    );
    const team2WithLastGamePoints = localStorage.getItem(
      "team2WithLastGamePoints"
    );
    if (team1WithLastGamePoints && team2WithLastGamePoints) {
      const team1Obj = JSON.parse(team1WithLastGamePoints);
      const team2Obj = JSON.parse(team2WithLastGamePoints);
      if (team1Obj.lastGamePoints > team2Obj.lastGamePoints) {
        team1Obj.wins += 1;
      } else {
        team2Obj.wins += 1;
      }
      team1Obj.games += 1;
      team2Obj.games += 1;
      team1Obj.points += parseInt(team1Obj.lastGamePoints);
      team2Obj.points += parseInt(team2Obj.lastGamePoints);

      setMatches([...matches, [team1Obj, team2Obj]]);
    }
    console.log("matches: ", matches);
  }, []);

  function handleDelete() {
    setMatches([]);
  }

  function handleEmptyLocalStorage() {
    localStorage.removeItem("team1");
    localStorage.removeItem("team2");
    localStorage.removeItem("team1WithLastGamePoints");
    localStorage.removeItem("team2WithLastGamePoints");
  }

  // update the database with the new wins, games and points

  // function handleDeleteMatches() {
  //   delete all matches from the databank

  // }

  return (
    <StyledDiv>
      <Head>
        <title>MatchBall</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header teaser={"Games"} />
      <section>
        {matches &&
          matches.map((match: []) =>
            match.map((team: Team) => {
              return (
                <TeamComponent team={team} key={team.id} isClickable={false} />
              );
            })
          )}
      </section>
      <section>
        <button onClick={handleEmptyLocalStorage}>
          <Link href={"/teamChoice"}>Add a new game</Link>
        </button>
        <button onClick={handleDelete}>Delete all games</button>
      </section>
      <Navigation />
    </StyledDiv>
  );
}

const StyledDiv = styled.div`
  height: 100vh;
  display: grid;
  grid-template-rows: 7rem auto 4rem;
  padding: 0;
`;

const StyledTeam = styled.div`
  border: 1px solid white;
  display: flex;
  flex-wrap: wrap;
`;
